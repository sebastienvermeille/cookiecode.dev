<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CookieCode</title>
    <description>In this blog I share with you some answers to problems I faced during my life of developer. Also some nice tools I like to use, configurations and so on.</description>
    <link>https://cookiecode.dev//</link>
    <atom:link href="https://cookiecode.dev/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 18 Sep 2023 17:56:15 +0000</pubDate>
    <lastBuildDate>Mon, 18 Sep 2023 17:56:15 +0000</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>[How to] Remove the fork link from a forked GitHub repository</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Sometimes you fork a repository abandoned by its author and decide to give it a second life.&lt;/p&gt;

&lt;p&gt;I did that for this repository https://github.com/sebastienvermeille/another-protobuf-maven-plugin.&lt;/p&gt;

&lt;p&gt;The principle of fork is great in theory we can still merge our changes upstream. But in this case, it was just a pain:&lt;/p&gt;

&lt;p&gt;Each time I opened a new PR for my own repo it opened a PR by default to the original forked repo (abandoned). I manually had to define another target each time (Imagine if contributors of the new repo get to this mistake too.. their PR will never appear to my project…)&lt;/p&gt;

&lt;p&gt;GitHub does not provide at this time an out-of-the-box solution to specify some default target repositories at the moment. But there is a solution!&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;p&gt;Use the GitHub chatbot-virtual-assistant at https://support.github.com/contact?tags=rr-forks&amp;amp;subject=Detach%20Fork&amp;amp;flow=detach_fork&lt;/p&gt;

&lt;p&gt;This will ask you a few questions about how the fork should be replaced and create a github support ticket automatically.&lt;/p&gt;

&lt;p&gt;After a couple of days, your repo will appear totally “unforked”. Thank’s to GitHub support!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;https://stackoverflow.com/a/16052845&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/tools/how-to-remove-the-fork-link-from-your-forked-github-projects.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/tools/how-to-remove-the-fork-link-from-your-forked-github-projects.html</guid>
        
        <category>git</category>
        
        <category>github</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Linux - Add windows 11 entry in Grub the secure way</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;You have a linux machine runing grub ? you installed windows 11 but it is not displayed in the Grub menu at boot?&lt;/p&gt;

&lt;p&gt;If you are like me in a situation where you have to systematically press F12 in the boot menu of the bios to select which “drive” you want to use to select your OS :) then this article is for you!&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;h3 id=&quot;1-boot-on-your-linux-installation-as-usual-start-a-terminal-and-run-sudo-os-prober-install-it-if-necessary&quot;&gt;1) Boot on your linux installation as usual, start a terminal and run: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo os-prober&lt;/code&gt; (Install it if necessary)&lt;/h3&gt;

&lt;p&gt;The output will be something simiar to this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  ~ sudo os-prober
/dev/nvme0n1p1@/efi/Microsoft/Boot/bootmgfw.efi:Windows Boot Manager:Windows:efi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-retrieve-the-uuid-of-the-efi-partition&quot;&gt;2) Retrieve the UUID of the EFI partition&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo blkid /dev/nvme0n1p1&lt;/code&gt; (Replace nvme0n1p1 with the correct partition you retrieved at step 1)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo blkid /dev/nvme0n1p1
/dev/nvme0n1p1: UUID=&quot;1212-1FF1&quot; BLOCK_SIZE=&quot;512&quot; TYPE=&quot;vfat&quot; PARTLABEL=&quot;EFI system partition&quot; PARTUUID=&quot;ffffff00-07ff-4bff-9bff-fcffffff13c3&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;UUID=”1212-1FF1”&lt;/p&gt;

&lt;h3 id=&quot;3-customize-grub-the-correct-way&quot;&gt;3) Customize grub the correct way&lt;/h3&gt;

&lt;p&gt;To customize grub the proper way we will simply declare custom configuration. That’s great because that’s exactly what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/grub.d/40_custom&lt;/code&gt; is for :)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nano /etc/grub.d/40_custom&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And then at the end of the file we will add the new entry:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;menuentry &apos;Windows 11&apos; {
  search --fs-uuid --set=root &amp;lt;UUID&amp;gt;
  chainloader (${root})/EFI/Microsoft/Boot/bootmgfw.efi
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Replace &lt;UUID&gt; with the value you retrieved at step 2.&lt;/UUID&gt;&lt;/p&gt;

&lt;p&gt;Save the changes in the file&lt;/p&gt;

&lt;h3 id=&quot;4-remove-write-permissions&quot;&gt;4) Remove write permissions&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo chmod o-w /etc/grub.d/40_custom&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-regenerate-grubcfg-including-your-overrided-changes&quot;&gt;5) Regenerate grub.cfg including your overrided changes&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo update-grub&lt;/code&gt;  if you have it on your distrib, otherwise the full command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-optional-check-the-generated-file&quot;&gt;6) (Optional) Check the generated file&lt;/h3&gt;

&lt;p&gt;you can see if your changes are now included if you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo cat /boot/grub/grub.cfg | grep &quot;Windows 11&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;7-reboot&quot;&gt;7) Reboot&lt;/h3&gt;

&lt;p&gt;reboot and see if it work :)&lt;/p&gt;

&lt;h2 id=&quot;why-doing-it-this-way-&quot;&gt;Why doing it this way ?&lt;/h2&gt;
&lt;p&gt;Some answers propose to enable os-prober (disabled by default). It would automatically add entries for detected systems (convenient). But disabled for security reasons by default (up to you) https://forum.manjaro.org/t/grub2-secure-boot-bypass-and-other-issues-update-highly-recommended/57280&lt;/p&gt;

&lt;p&gt;Some answers propose to edit directly the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/boot/grub/grub.cfg&lt;/code&gt; file, but take care, this file is generated by commands by the system. So basically if you go put your fingers there… you take the risk to have your custom changes being overrided.&lt;/p&gt;

&lt;p&gt;There is a simple way to customize grub via custom file extra for that purpose let’s use it :) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/grub.d/40_custom&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;https://bbs.archlinux.org/viewtopic.php?pid=2006988#p2006988&lt;/li&gt;
  &lt;li&gt;https://askubuntu.com/a/1425651&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/linux/linux-add-windows-11-entry-in-grub-the-secure-way.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/linux/linux-add-windows-11-entry-in-grub-the-secure-way.html</guid>
        
        <category>linux</category>
        
        <category>grub</category>
        
        <category>windows</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>linux reset audio volume with command line</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Sometimes the sound is boosted too much and saturated.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pactl list short synks&lt;/code&gt; Will list your audio outputs and prefix them with a number that you can then use here:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pactl set-sink-volume &amp;lt;number&amp;gt; 100%&lt;/code&gt; Will set the volume to 100% for output &lt;number&gt;&lt;/number&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/i3/linux-reset-audio-volume-with-command-line.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/i3/linux-reset-audio-volume-with-command-line.html</guid>
        
        <category>linux</category>
        
        <category>i3</category>
        
        
        <category>i3</category>
        
      </item>
    
      <item>
        <title>[Cirrus CI] Using cache and fingerprint</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Imagine: You want to create two tasks in your Cirrus pipeline:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;build_task&lt;/li&gt;
  &lt;li&gt;test_task (depends on build_task)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;You should not expect that the output of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_task&lt;/code&gt; is available in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_task&lt;/code&gt;&lt;/strong&gt;. Some other CI does that some not such as Cirrus.&lt;/p&gt;

&lt;h2 id=&quot;how-can-i-share-files-between-multiple-cirrus-ci-tasks-&quot;&gt;How can I share files between multiple Cirrus-CI tasks ?&lt;/h2&gt;

&lt;p&gt;To address that use case, Cirrus recommends to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;cache: instruction to persist files between task runs.&lt;/p&gt;

  &lt;p&gt;cf: https://cirrus-ci.org/guide/writing-tasks/#supported-instructions&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So basically the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_task&lt;/code&gt; will declare a cache:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#.cirrus.yml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;build_task&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node:latest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;node_modules_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# &amp;lt;--- declare a cache&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node_modules&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# &amp;lt;--- this cache will contains this particular folder&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fingerprint_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat package-lock.json&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# &amp;lt;--- This is the most important notion that I will explain later&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And then this cache can be reused in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_task&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;importance-of-fingerprint_script&quot;&gt;Importance of fingerprint_script&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are only two hard things in computer science: cache invalidation and naming things. – Phil Karlton&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This single line is &lt;strong&gt;responsible for the cache invalidation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For cirrus, as long as the evaluation of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fingerprint_script&lt;/code&gt; stays the same -&amp;gt; it reuse the cache.&lt;/p&gt;

&lt;p&gt;The only way to make it repopulate the cache is to have a different value here.&lt;/p&gt;

&lt;h3 id=&quot;situations&quot;&gt;Situations&lt;/h3&gt;
&lt;p&gt;(Real life issue) As a beginner I used the following:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fingerprint_script: echo $CIRRUS_OS&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This was a terrible &lt;strong&gt;mistake&lt;/strong&gt;.
Here is why: my cache was based on the OS used by the cirrus agent running the pipeline.
As our cluster was based on linux, that value stayed constantly the same. So whatever I could have build or changed the cached folder was still to reuse from cirrus perspective.&lt;/p&gt;

&lt;p&gt;It can be useful to use the CIRRUS_OS as part of the finger print but much more rarely as a single value.&lt;/p&gt;

&lt;p&gt;Here are some good candidates for a cirrus cache fingerprint:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat yarn.lock&lt;/code&gt; // It will change as soon as you update the version of a dependency/add/remove dependencies pretty nice to reuse the same node_modules dir&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat package-lock.json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;To read more about caching with cirrus: https://cirrus-ci.org/guide/writing-tasks/#cache-instruction&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/ci/cd/cirrus-ci-using-cache-and-fingerprint.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/ci/cd/cirrus-ci-using-cache-and-fingerprint.html</guid>
        
        <category>ci</category>
        
        <category>cirrus-ci</category>
        
        <category>cirrus</category>
        
        
        <category>CI/CD</category>
        
      </item>
    
      <item>
        <title>[Howto] Create a voice reminder for daily meeting using NodeRed</title>
        <description>&lt;div class=&quot;premonition info&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;svg class=&quot;icon info&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-info&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;div class=&quot;title&quot;&gt; Pre requisiste &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt;This article suppose you have a running nodered instance.&lt;/p&gt;

&lt;p&gt;If you don’t have one yet have a look &lt;a href=&quot;https://nodered.org/docs/getting-started/&quot;&gt;here&lt;/a&gt; first.&lt;/p&gt;



 &lt;/div&gt; &lt;/div&gt;
&lt;h2 id=&quot;goal&quot;&gt;Goal&lt;/h2&gt;

&lt;div class=&quot;premonition note&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;svg class=&quot;icon note&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-note&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;div class=&quot;title&quot;&gt; As a passionated programmer I need a reminder at `08:58` each working day (monday to friday) &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt;That way if I am totally focussed on my coding session I still get a reminder.&lt;/p&gt;



 &lt;/div&gt; &lt;/div&gt;
&lt;h3 id=&quot;acceptance-criteria&quot;&gt;Acceptance criteria:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A notification sound will be played in SONOS to remind me about it (audio effect)
    &lt;ul&gt;
      &lt;li&gt;This sound will be generated using &lt;a href=&quot;https://ttsmp3.com/&quot;&gt;ttsmp3.com &lt;/a&gt;free online tool
        &lt;ul&gt;
          &lt;li&gt;given text: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sir, the daily meeting starts in a few. Are you ready ?&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;voice: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;US English / Matthew&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;note: You can download the mp3 file &lt;a href=&quot;../assets/audio/daily-meeting-reminder.mp3&quot;&gt;here&lt;/a&gt; directly&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A philips HUE effect will appear on my led strip (visual effect)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way we have some fallback in the system and can reduce late joins of 99.9% :+1:&lt;/p&gt;

&lt;h3 id=&quot;implementation-using-nodered&quot;&gt;Implementation using NodeRed&lt;/h3&gt;

&lt;p&gt;In order to achieve that we will need two nodered extensions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sonos&lt;/li&gt;
  &lt;li&gt;Hue&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;premonition warning&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;svg class=&quot;icon warning&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-warning&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;div class=&quot;title&quot;&gt; Warning &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt;TO COMPLETE&lt;/p&gt;



 &lt;/div&gt; &lt;/div&gt;
&lt;p&gt;Basically here we will have the following flow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/nodered-predaily-meeting-reminder.png&quot; alt=&quot;screenshot of node-red flow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First we trigger this only at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;08:58&lt;/code&gt; during working days:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/noderaid-predaily-scheduler.png&quot; alt=&quot;edit inject node screenshot&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;premonition warning&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;svg class=&quot;icon warning&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-warning&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;div class=&quot;title&quot;&gt; Warning &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt;Node red will use the timezone defined in your instance. (If you run under docker you can define it via the env &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TZ=Europe/Paris&lt;/code&gt; or something else based on your region.)&lt;/p&gt;

&lt;p&gt;(This concerns point 2) of the screenshot)&lt;/p&gt;



 &lt;/div&gt; &lt;/div&gt;
&lt;p&gt;Then we trigger some actions&lt;/p&gt;

&lt;div class=&quot;premonition warning&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;svg class=&quot;icon warning&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-warning&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;div class=&quot;title&quot;&gt; Warning &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt;TO COMPLETE&lt;/p&gt;



 &lt;/div&gt; &lt;/div&gt;
&lt;p&gt;Here is the snippet of code that you can import into node red directly:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;TO&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;DO&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
</description>
        <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/iot/nodered-daily-reminder.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/iot/nodered-daily-reminder.html</guid>
        
        <category>nodered</category>
        
        <category>sonos</category>
        
        <category>hue</category>
        
        <category>scrum</category>
        
        
        <category>iot</category>
        
      </item>
    
      <item>
        <title>[Howto] Convert a text to a speech audio file for free using TTSMP3</title>
        <description>&lt;p&gt;Sometimes you might need to have some audio sound based on text. Such tools are called TTS (Text to Speech).
Many exists but rarely for free.&lt;/p&gt;

&lt;p&gt;I share with you one that I particularly like to use for my personal home automation notifications:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/ttsmp3.png&quot; alt=&quot;ttsmp3 logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is totally free for a normal usage (Maximum 3K characters a day).&lt;/p&gt;

&lt;p&gt;I give you here an example so you can see how easy it is:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/ttsmp3-example.png&quot; alt=&quot;screenshot of ttsmp3.com website&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I hope you will enjoy this tool if you have free other online tools to suggest please leave a comment!&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/tools/ttsmp3-free-online-text-to-speech.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/tools/ttsmp3-free-online-text-to-speech.html</guid>
        
        <category>tts</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>[Howto] Create your own app for UnRaid</title>
        <description>&lt;p&gt;Unraid provide an App store via its &lt;a href=&quot;https://forums.unraid.net/topic/38582-plug-in-community-applications/&quot;&gt;community app plugin&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/unraid-community-app-plugin.png&quot; alt=&quot;Going step by step&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With this it becomes really easy for everyone to install any app on Unraid: Just click install and voila your Unraid server is up and running.&lt;/p&gt;

&lt;p&gt;What about publishing your own app there ? Wouldn’t it be a great way to let it get adopted by the whole unraid community ?&lt;/p&gt;

&lt;p&gt;If you ask me I will tell you: &lt;strong&gt;Yes definitely!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Furthermore this is totally free and very easy compared to some other ecosystems.&lt;/p&gt;

&lt;p&gt;Let’s have a look about that!&lt;/p&gt;

&lt;h2 id=&quot;create-your-own-app-store&quot;&gt;Create your own app store&lt;/h2&gt;

&lt;p&gt;I created mine here if you are interested in the end results feel free to have a look: &lt;a href=&quot;https://github.com/sebastienvermeille/unraid-docker-templates&quot;&gt;https://github.com/sebastienvermeille/unraid-docker-templates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s see how it works:&lt;/p&gt;

&lt;p&gt;1) First you have to create a public git repository (on github or whatever)
2) Then inside of it we will declare some templates for our docker applications.&lt;/p&gt;

&lt;p&gt;Here is the template I have created for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sonos2mqtt&lt;/code&gt; app:&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sonos2mqtt.xml

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Container&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;sonos2mqtt&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Registry&amp;gt;&lt;/span&gt;https://hub.docker.com/r/svrooij/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Registry&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Repository&amp;gt;&lt;/span&gt;svrooij/sonos2mqtt&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Repository&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Github&amp;gt;&lt;/span&gt;https://github.com/svrooij/sonos2mqtt&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Github&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Network&amp;gt;&lt;/span&gt;bridge&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Network&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;MyIP/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Privileged&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Privileged&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Support&amp;gt;&lt;/span&gt;https://svrooij.github.io/sonos2mqtt&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Support&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Project/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Overview&amp;gt;&lt;/span&gt;
        Bridge between Sonos and mqtt server
        Provide features like notifications or text-to-speech, publish sonos status to mqtt and so on.
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Overview&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Category&amp;gt;&lt;/span&gt;HomeAutomation:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Category&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;WebUI&amp;gt;&lt;/span&gt;http://[IP]:[PORT:8080]/status&lt;span class=&quot;nt&quot;&gt;&amp;lt;/WebUI&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TemplateURL/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Icon&amp;gt;&lt;/span&gt;https://raw.githubusercontent.com/sebastienvermeille/unraid-docker-templates/main/images/mqtt2sonos_icon.png&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Icon&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ExtraParams/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;PostArgs/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DateInstalled&amp;gt;&lt;/span&gt;1527397055&lt;span class=&quot;nt&quot;&gt;&amp;lt;/DateInstalled&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DonateText/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DonateLink/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DonateImg/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;MinVer/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;It is very important to set the `Ip of this docker (sonos listener host)` field correctly otherwise the web
        ui won&apos;t work. (You can run this container without then grab the ip edit and set it)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Networking&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Mode&amp;gt;&lt;/span&gt;bridge&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Mode&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Publish&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Port&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;HostPort&amp;gt;&lt;/span&gt;6329&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HostPort&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;ContainerPort&amp;gt;&lt;/span&gt;6329&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ContainerPort&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;Protocol&amp;gt;&lt;/span&gt;tcp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Protocol&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Port&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Publish&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Networking&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Data&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Volume&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;HostDir&amp;gt;&lt;/span&gt;/mnt/user/appdata/sonos2mqtt&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HostDir&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ContainerDir&amp;gt;&lt;/span&gt;/data&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ContainerDir&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Mode&amp;gt;&lt;/span&gt;rw&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Mode&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Volume&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Data&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Environment/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Labels/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Host Port&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;6329&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;6329&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Mode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tcp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Container Port: 6329&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Port&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;always&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;6329&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IP of one known sonos speaker&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SONOS2MQTT_DEVICE&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(device discovery doesnt always work inside docker)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Variable&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;always&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mqtt connection string&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SONOS2MQTT_MQTT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mqtt(s)://[user]:[password]@[host]:[port]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Variable&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;always&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Publish distinct (optional)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SONOS2MQTT_DISTINCT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Publish distinct or not&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Variable&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;advanced&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ip of this docker (sonos listener host)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SONOS_LISTENER_HOST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Variable&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;always&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AppData Config Path&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/config&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/mnt/user/appdata/sonos2mqtt&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Mode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rw&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Container Path: /config&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Path&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;advanced-hide&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;/mnt/user/appdata/sonos2mqtt&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Text to speech endpoint url (optional)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SONOS_TTS_ENDPOINT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Variable&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;always&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Text to speech language (optional)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SONOS_TTS_LANG&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en-US&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Variable&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Display=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;always&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Required=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Mask=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Container&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As you can see it’s just a simple xml file declaring a bit ports, environment variables, paths and so on.&lt;/p&gt;

&lt;p&gt;You can define here multiple type of configurations:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Variable: ENV variable name&lt;/li&gt;
  &lt;li&gt;Port: A port mapping&lt;/li&gt;
  &lt;li&gt;Path: A path exposed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details you can read this page of &lt;a href=&quot;https://wiki.unraid.net/DockerTemplateSchema&quot;&gt;unraid’s wiki&lt;/a&gt; it’s very good documented.&lt;/p&gt;

&lt;p&gt;3) Then we have to tell unraid to fetch our templates
To do so you simply go to your unraid instance and select the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Docker&lt;/code&gt; tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/unraid-select-docker.png&quot; alt=&quot;unraid docker menu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then on the bottom of the page add the url of the git repository you have created at step 1):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/unraid-custom-template-repository.png&quot; alt=&quot;unraid template repositories&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SAVE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;4) Now you can create a docker container with your template:&lt;/p&gt;

&lt;p&gt;Click on &lt;img src=&quot;../assets/img/articles/unraid-add-container-button.png&quot; alt=&quot;add container&quot; /&gt; and then select your own template:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/unraid-select-custom-template.png&quot; alt=&quot;screenshot of add container&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And then all the configuration you defined in the xml file will be rendered as follow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/unraid-display-custom-template.png&quot; alt=&quot;screenshot of example of a custom template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see we can define custom values, optional values, masked values for password etc. it is really powerful thank’s Unraid Devs!&lt;/p&gt;

&lt;h2 id=&quot;integrate-your-docker-template-repository-with-the-community-apps-plugin&quot;&gt;Integrate your docker template repository with the community apps plugin&lt;/h2&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.unraid.net/DockerTemplateSchema&quot;&gt;Docker template schema&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.unraid.net/topic/57181-docker-faq/#comment-566084&quot;&gt;Docker FAQ - Host app on community applications plugin&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/unraid/unraid-create-custom-docker-template.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/unraid/unraid-create-custom-docker-template.html</guid>
        
        <category>docker</category>
        
        
        <category>unraid</category>
        
      </item>
    
      <item>
        <title>Falmeshot - Do screenshots and annotate them in seconds !</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;As developer, we have to explain stuff. This is our DNA, explain how the program works, explain where the user has to click and so on.&lt;/p&gt;

&lt;p&gt;I falled in love with this great tool called &lt;strong&gt;Flameshot&lt;/strong&gt; which works on Linux Mac and Windows and is totally free.&lt;/p&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;

&lt;p&gt;Just push your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prt scr&lt;/code&gt; shortcut and then you are in!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/img/articles/flameshot-demo.jpg&quot; alt=&quot;Demo using flameshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see there are plenty of usefull tools which appears, first you select the area which interest you (crop).&lt;/p&gt;

&lt;p&gt;And then you can:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Draw squares, arrows, lines, circles, free draw&lt;/li&gt;
  &lt;li&gt;Add texts&lt;/li&gt;
  &lt;li&gt;Add numbered circles (they increment at each click very handy!)&lt;/li&gt;
  &lt;li&gt;You can blur some sensitive data&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download it here: &lt;a href=&quot;https://flameshot.org/#download&quot;&gt;https://flameshot.org/#download&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;A super powerful tool for free and which does the job!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://flameshot.org/&quot;&gt;Flameshot - Official website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/tools/linux-screenshots-flameshot.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/tools/linux-screenshots-flameshot.html</guid>
        
        <category>linux</category>
        
        <category>windows</category>
        
        <category>mac</category>
        
        <category>screenshot</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>[WIP][How to] Fix Jetbrains shortcuts on i3wm</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;1) In jetbrains toolbox app &amp;gt; tools: enable generate shortcuts and define the path to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.local/bin&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/.local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: It will only work for new installations (remove and reinstall your apps evtl)&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtrack.jetbrains.com/issue/IDEA-206235&quot;&gt;Jetbrains youtrack ticket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/tools/Fix-jetbrains-shortcuts-i3.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/tools/Fix-jetbrains-shortcuts-i3.html</guid>
        
        <category>linux</category>
        
        <category>i3wm</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>[Howto] Bind PrtScr key in i3wm with Falmeshot to take screenshots</title>
        <description>&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano ~/.config/i3/config&lt;/code&gt; (or vim whatever)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ~/.config/i3/config&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# bind flameshot to printscr button&lt;/span&gt;
bindsym Print &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;flameshot gui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i3-msg reload&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i3-msg restart&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Voila !&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
        <link>https://cookiecode.dev/linux/Bind-flameshot-to-printscr-i3wm.html</link>
        <guid isPermaLink="true">https://cookiecode.dev/linux/Bind-flameshot-to-printscr-i3wm.html</guid>
        
        <category>i3wm</category>
        
        
        <category>linux</category>
        
      </item>
    
  </channel>
</rss>
